package divinerpg.entities.bosses.fiend;

import divinerpg.entities.base.DivineBoss;
import divinerpg.entities.base.render.DivineBossModel;
import net.minecraft.client.renderer.entity.model.RendererModel;
import net.minecraft.util.math.MathHelper;

public class SoulFiendModel extends DivineBossModel<DivineBoss> {
    RendererModel head;
    RendererModel body;
    RendererModel rightarmext;
    RendererModel leftarmext;
    RendererModel rightlegcap;
    RendererModel leftlegcap;
    RendererModel Shape1;
    RendererModel Shape2;
    RendererModel Shape3;
    RendererModel Shape4;
    RendererModel Shape5;
    RendererModel Shape6;
    RendererModel Shape7;
    RendererModel Shape8;
    RendererModel Shape9;
    RendererModel Shape10;
    RendererModel back;
    RendererModel back2;
    RendererModel back3;
    RendererModel back4;
    RendererModel leftleg;
    RendererModel rightleg;
    RendererModel leftarm;
    RendererModel rightarm;
    RendererModel leftfoot;
    RendererModel rightfoot;
    RendererModel back5;
    RendererModel back6;
    RendererModel back7;
    RendererModel back8;
    RendererModel back9;
    RendererModel back10;
    RendererModel back11;
    RendererModel back12;

    public SoulFiendModel() {
        textureWidth = 64;
        textureHeight = 32;

        head = new RendererModel(this, 0, 0);
        head.addBox(-4F, -8F, -4F, 8, 8, 8);
        head.setRotationPoint(0F, 0F, 0F);
        head.setTextureSize(64, 32);
        head.mirror = true;
        setRotation(head, 0F, 0F, 0F);
        body = new RendererModel(this, 16, 16);
        body.addBox(-4F, 0F, -2F, 8, 12, 4);
        body.setRotationPoint(0F, 0F, 0F);
        body.setTextureSize(64, 32);
        body.mirror = true;
        setRotation(body, 0F, 0F, 0F);
        rightarmext = new RendererModel(this, 40, 16);
        rightarmext.addBox(1F, -2F, -2F, 3, 3, 4);
        rightarmext.setRotationPoint(-8F, 2F, 0F);
        rightarmext.setTextureSize(64, 32);
        rightarmext.mirror = true;
        setRotation(rightarmext, 0F, 0F, 0F);
        leftarmext = new RendererModel(this, 40, 16);
        leftarmext.addBox(-4F, -2F, -2F, 3, 3, 4);
        leftarmext.setRotationPoint(8F, 2F, 0F);
        leftarmext.setTextureSize(64, 32);
        leftarmext.mirror = true;
        setRotation(leftarmext, 0F, 0F, 0F);
        rightlegcap = new RendererModel(this, 0, 16);
        rightlegcap.addBox(-3F, -4F, -3F, 6, 5, 6);
        rightlegcap.setRotationPoint(-4F, 12F, 0F);
        rightlegcap.setTextureSize(64, 32);
        rightlegcap.mirror = true;
        setRotation(rightlegcap, 0F, 0F, 0F);
        leftlegcap = new RendererModel(this, 0, 16);
        leftlegcap.addBox(-3F, -4F, -3F, 6, 5, 6);
        leftlegcap.setRotationPoint(4F, 12F, 0F);
        leftlegcap.setTextureSize(64, 32);
        leftlegcap.mirror = true;
        setRotation(leftlegcap, 0F, 0F, 0F);
        Shape1 = new RendererModel(this, 8, 0);
        Shape1.addBox(0F, 0F, 0F, 2, 2, 5);
        Shape1.setRotationPoint(2F, -8F, -9F);
        Shape1.setTextureSize(64, 32);
        Shape1.mirror = true;
        setRotation(Shape1, 0F, 0F, 0F);
        Shape2 = new RendererModel(this, 8, 0);
        Shape2.addBox(0F, 0F, 0F, 2, 2, 5);
        Shape2.setRotationPoint(-4F, -8F, -9F);
        Shape2.setTextureSize(64, 32);
        Shape2.mirror = true;
        setRotation(Shape2, 0F, 0F, 0F);
        Shape3 = new RendererModel(this, 9, 0);
        Shape3.addBox(0F, 0F, 0F, 4, 2, 2);
        Shape3.setRotationPoint(4F, -6F, -4F);
        Shape3.setTextureSize(64, 32);
        Shape3.mirror = true;
        setRotation(Shape3, 0F, 0F, 0F);
        Shape4 = new RendererModel(this, 9, 0);
        Shape4.addBox(0F, 0F, 0F, 4, 2, 2);
        Shape4.setRotationPoint(-8F, -6F, -4F);
        Shape4.setTextureSize(64, 32);
        Shape4.mirror = true;
        setRotation(Shape4, 0F, 0F, 0F);
        Shape5 = new RendererModel(this, 9, 0);
        Shape5.addBox(0F, 0F, 0F, 4, 2, 2);
        Shape5.setRotationPoint(4F, -3F, -4F);
        Shape5.setTextureSize(64, 32);
        Shape5.mirror = true;
        setRotation(Shape5, 0F, 0F, 0F);
        Shape6 = new RendererModel(this, 9, 0);
        Shape6.addBox(0F, 0F, 0F, 4, 2, 2);
        Shape6.setRotationPoint(-8F, -3F, -4F);
        Shape6.setTextureSize(64, 32);
        Shape6.mirror = true;
        setRotation(Shape6, 0F, 0F, 0F);
        Shape7 = new RendererModel(this, 8, 0);
        Shape7.addBox(0F, 0F, 0F, 2, 2, 5);
        Shape7.setRotationPoint(6F, -6F, -9F);
        Shape7.setTextureSize(64, 32);
        Shape7.mirror = true;
        setRotation(Shape7, 0F, 0F, 0F);
        Shape8 = new RendererModel(this, 8, 0);
        Shape8.addBox(0F, 0F, 0F, 2, 2, 5);
        Shape8.setRotationPoint(6F, -3F, -9F);
        Shape8.setTextureSize(64, 32);
        Shape8.mirror = true;
        setRotation(Shape8, 0F, 0F, 0F);
        Shape9 = new RendererModel(this, 8, 0);
        Shape9.addBox(0F, 0F, 0F, 2, 2, 5);
        Shape9.setRotationPoint(-8F, -6F, -9F);
        Shape9.setTextureSize(64, 32);
        Shape9.mirror = true;
        setRotation(Shape9, 0F, 0F, 0F);
        Shape10 = new RendererModel(this, 8, 0);
        Shape10.addBox(0F, 0F, 0F, 2, 2, 5);
        Shape10.setRotationPoint(-8F, -3F, -9F);
        Shape10.setTextureSize(64, 32);
        Shape10.mirror = true;
        setRotation(Shape10, 0F, 0F, 0F);
        back = new RendererModel(this, 4, 0);
        back.addBox(0F, 0F, 0F, 4, 4, 5);
        back.setRotationPoint(-2F, 4F, 2F);
        back.setTextureSize(64, 32);
        back.mirror = true;
        setRotation(back, 0F, 0F, 0F);
        back2 = new RendererModel(this, 34, 26);
        back2.addBox(0F, 0F, 0F, 12, 2, 2);
        back2.setRotationPoint(-12F, 13F, 4F);
        back2.setTextureSize(64, 32);
        back2.mirror = true;
        setRotation(back2, 0F, 0F, -0.6108652F);
        back3 = new RendererModel(this, 15, 25);
        back3.addBox(0F, 0F, 0F, 9, 2, 2);
        back3.setRotationPoint(8F, 4F, 5F);
        back3.setTextureSize(64, 32);
        back3.mirror = true;
        setRotation(back3, 0F, 0F, -1.570796F);
        back4 = new RendererModel(this, 15, 25);
        back4.addBox(0F, -1F, 0F, 9, 2, 2);
        back4.setRotationPoint(-9F, 4F, 5F);
        back4.setTextureSize(64, 32);
        back4.mirror = true;
        setRotation(back4, 0F, 0F, -1.570796F);
        leftleg = new RendererModel(this, 0, 16);
        leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        leftleg.setRotationPoint(4F, 12F, 0F);
        leftleg.setTextureSize(64, 32);
        leftleg.mirror = true;
        setRotation(leftleg, 0F, 0F, 0F);
        rightleg = new RendererModel(this, 0, 16);
        rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        rightleg.setRotationPoint(-4F, 12F, 0F);
        rightleg.setTextureSize(64, 32);
        rightleg.mirror = true;
        setRotation(rightleg, 0F, 0F, 0F);
        leftarm = new RendererModel(this, 40, 3);
        leftarm.addBox(-1F, -2F, -2F, 4, 20, 4);
        leftarm.setRotationPoint(8F, 2F, 0F);
        leftarm.setTextureSize(64, 32);
        leftarm.mirror = true;
        setRotation(leftarm, 0F, 0F, 0F);
        rightarm = new RendererModel(this, 40, 3);
        rightarm.addBox(-3F, -2F, -2F, 4, 20, 4);
        rightarm.setRotationPoint(-8F, 2F, 0F);
        rightarm.setTextureSize(64, 32);
        rightarm.mirror = true;
        setRotation(rightarm, 0F, 0F, 0F);
        leftfoot = new RendererModel(this, 0, 16);
        leftfoot.addBox(-3F, 9F, -3F, 6, 3, 6);
        leftfoot.setRotationPoint(4F, 12F, 0F);
        leftfoot.setTextureSize(64, 32);
        leftfoot.mirror = true;
        setRotation(leftfoot, 0F, 0F, 0F);
        rightfoot = new RendererModel(this, 0, 16);
        rightfoot.addBox(-3F, 9F, -3F, 6, 3, 6);
        rightfoot.setRotationPoint(-4F, 12F, 0F);
        rightfoot.setTextureSize(64, 32);
        rightfoot.mirror = true;
        setRotation(rightfoot, 0F, 0F, 0F);
        back5 = new RendererModel(this, 4, 0);
        back5.addBox(0F, 0F, 0F, 4, 4, 5);
        back5.setRotationPoint(-2F, 0F, 2F);
        back5.setTextureSize(64, 32);
        back5.mirror = true;
        setRotation(back5, 0F, 0F, 0F);
        back6 = new RendererModel(this, 8, 0);
        back6.addBox(0F, 0F, 0F, 5, 2, 2);
        back6.setRotationPoint(2F, 0F, 5F);
        back6.setTextureSize(64, 32);
        back6.mirror = true;
        setRotation(back6, 0F, 0F, 0F);
        back7 = new RendererModel(this, 15, 25);
        back7.addBox(0F, 0F, 0F, 9, 2, 2);
        back7.setRotationPoint(5F, 0F, 5F);
        back7.setTextureSize(64, 32);
        back7.mirror = true;
        setRotation(back7, 0F, 0F, -1.570796F);
        back8 = new RendererModel(this, 8, 0);
        back8.addBox(0F, 0F, 0F, 5, 2, 2);
        back8.setRotationPoint(-7F, 0F, 5F);
        back8.setTextureSize(64, 32);
        back8.mirror = true;
        setRotation(back8, 0F, 0F, 0F);
        back9 = new RendererModel(this, 15, 25);
        back9.addBox(0F, -1F, 0F, 9, 2, 2);
        back9.setRotationPoint(-6F, 0F, 5F);
        back9.setTextureSize(64, 32);
        back9.mirror = true;
        setRotation(back9, 0F, 0F, -1.570796F);
        back10 = new RendererModel(this, 42, 5);
        back10.addBox(0F, 0F, 0F, 8, 2, 2);
        back10.setRotationPoint(-10F, 4F, 5F);
        back10.setTextureSize(64, 32);
        back10.mirror = true;
        setRotation(back10, 0F, 0F, 0F);
        back11 = new RendererModel(this, 42, 5);
        back11.addBox(0F, 0F, 0F, 8, 2, 2);
        back11.setRotationPoint(2F, 4F, 5F);
        back11.setTextureSize(64, 32);
        back11.mirror = true;
        setRotation(back11, 0F, 0F, 0F);
        back12 = new RendererModel(this, 34, 26);
        back12.addBox(0F, 0F, 0F, 12, 2, 2);
        back12.setRotationPoint(2F, 6F, 4F);
        back12.setTextureSize(64, 32);
        back12.mirror = true;
        setRotation(back12, 0F, 0F, 0.6108652F);
    }

    @Override
    public void setRotationAngles(DivineBoss entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor) {
        super.setRotationAngles(entityIn, limbSwing, limbSwingAmount, ageInTicks, netHeadYaw, headPitch, scaleFactor);

        this.rightarm.rotateAngleX =
                this.rightarmext.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float) Math.PI) * 2.0F * limbSwingAmount * 0.5F;

        this.leftarm.rotateAngleX =
                this.leftarmext.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F;

        this.rightarm.rotateAngleZ =
                this.leftarm.rotateAngleZ = 0.0F;

        this.rightleg.rotateAngleX =
                this.rightfoot.rotateAngleX =
                        this.rightlegcap.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;

        this.leftleg.rotateAngleX =
                this.leftfoot.rotateAngleX =
                        this.leftlegcap.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float) Math.PI) * 1.4F * limbSwingAmount;

        this.rightleg.rotateAngleY =
                this.leftleg.rotateAngleY = 0.0F;
    }
}
