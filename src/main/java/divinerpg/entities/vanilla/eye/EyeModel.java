package divinerpg.entities.vanilla.eye;

import divinerpg.entities.base.DivineModel;
import net.minecraft.client.renderer.entity.model.RendererModel;
import net.minecraft.util.math.MathHelper;

public class EyeModel extends DivineModel<Eye> {
    RendererModel ear1;
    RendererModel body1;
    RendererModel ext1;
    RendererModel body2;
    RendererModel body3;
    RendererModel body4;
    RendererModel leftbackfoot;
    RendererModel eye1;
    RendererModel cap1;
    RendererModel leftbackleg;
    RendererModel leftfrontfoot;
    RendererModel leftfrontleg;
    RendererModel eye2;
    RendererModel ext2;
    RendererModel cap2;
    RendererModel rightbackfoot;
    RendererModel rightbackleg;
    RendererModel ext3;
    RendererModel eye3;
    RendererModel cap3;
    RendererModel ext4;
    RendererModel cap4;
    RendererModel eye4;
    RendererModel rightfrontleg;
    RendererModel rightfrontfoot;
    RendererModel head;
    RendererModel ear2;
    RendererModel ear3;
    RendererModel ear4;

    public EyeModel() {
        textureWidth = 64;
        textureHeight = 32;

        ear1 = new RendererModel(this, 0, 22);
        ear1.addBox(4F, -4F, 6F, 1, 2, 7);
        ear1.setRotationPoint(0F, 1F, 0F);
        ear1.setTextureSize(64, 32);
        ear1.mirror = true;
        setRotation(ear1, 1.047198F, 0F, 0F);
        body1 = new RendererModel(this, 32, 12);
        body1.addBox(-4F, 0F, -2F, 8, 12, 8);
        body1.setRotationPoint(-4F, 0F, -6F);
        body1.setTextureSize(64, 32);
        body1.mirror = true;
        setRotation(body1, 0F, 0F, 0F);
        ext1 = new RendererModel(this, 24, 0);
        ext1.addBox(-2F, -2F, -2F, 4, 2, 8);
        ext1.setRotationPoint(10F, 12F, 9F);
        ext1.setTextureSize(64, 32);
        ext1.mirror = true;
        setRotation(ext1, 0F, 0.7853982F, 0F);
        body2 = new RendererModel(this, 32, 12);
        body2.addBox(-4F, 0F, -2F, 8, 12, 8);
        body2.setRotationPoint(-4F, 0F, 2F);
        body2.setTextureSize(64, 32);
        body2.mirror = true;
        setRotation(body2, 0F, 0F, 0F);
        body3 = new RendererModel(this, 32, 12);
        body3.addBox(-4F, 0F, -2F, 8, 12, 8);
        body3.setRotationPoint(4F, 0F, -6F);
        body3.setTextureSize(64, 32);
        body3.mirror = true;
        setRotation(body3, 0F, 0F, 0F);
        body4 = new RendererModel(this, 32, 12);
        body4.addBox(-4F, 0F, -2F, 8, 12, 8);
        body4.setRotationPoint(4F, 0F, 2F);
        body4.setTextureSize(64, 32);
        body4.mirror = true;
        setRotation(body4, 0F, 0F, 0F);
        leftbackfoot = new RendererModel(this, 0, 24);
        leftbackfoot.addBox(-3F, 10F, -3F, 6, 2, 6);
        leftbackfoot.setRotationPoint(14F, 12F, 13F);
        leftbackfoot.setTextureSize(64, 32);
        leftbackfoot.mirror = true;
        setRotation(leftbackfoot, 0F, 0F, 0F);
        eye1 = new RendererModel(this, 48, 0);
        eye1.addBox(0F, 0F, 0F, 4, 4, 4);
        eye1.setRotationPoint(12F, 8F, 11F);
        eye1.setTextureSize(64, 32);
        eye1.mirror = true;
        setRotation(eye1, 0F, 0F, 0F);
        cap1 = new RendererModel(this, 48, 0);
        cap1.addBox(0F, 0F, 0F, 4, 4, 4);
        cap1.setRotationPoint(7F, 8F, 6F);
        cap1.setTextureSize(64, 32);
        cap1.mirror = true;
        setRotation(cap1, 0F, 0F, 0F);
        leftbackleg = new RendererModel(this, 0, 16);
        leftbackleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        leftbackleg.setRotationPoint(14F, 12F, 13F);
        leftbackleg.setTextureSize(64, 32);
        leftbackleg.mirror = true;
        setRotation(leftbackleg, 0F, 0F, 0F);
        leftfrontfoot = new RendererModel(this, 0, 24);
        leftfrontfoot.addBox(-3F, 10F, -3F, 6, 2, 6);
        leftfrontfoot.setRotationPoint(14F, 12F, -13F);
        leftfrontfoot.setTextureSize(64, 32);
        leftfrontfoot.mirror = true;
        setRotation(leftfrontfoot, 0F, 0F, 0F);
        leftfrontleg = new RendererModel(this, 0, 16);
        leftfrontleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        leftfrontleg.setRotationPoint(14F, 12F, -13F);
        leftfrontleg.setTextureSize(64, 32);
        leftfrontleg.mirror = true;
        setRotation(leftfrontleg, 0F, 0F, 0F);
        eye2 = new RendererModel(this, 48, 0);
        eye2.addBox(0F, 0F, 0F, 4, 4, 4);
        eye2.setRotationPoint(12F, 8F, -15F);
        eye2.setTextureSize(64, 32);
        eye2.mirror = true;
        setRotation(eye2, 0F, 0F, 0F);
        ext2 = new RendererModel(this, 24, 0);
        ext2.addBox(-2F, -2F, -2F, 4, 2, 8);
        ext2.setRotationPoint(13F, 12F, -12F);
        ext2.setTextureSize(64, 32);
        ext2.mirror = true;
        setRotation(ext2, 0F, -0.7853982F, 0F);
        cap2 = new RendererModel(this, 48, 0);
        cap2.addBox(0F, 0F, 0F, 4, 4, 4);
        cap2.setRotationPoint(7F, 8F, -10F);
        cap2.setTextureSize(64, 32);
        cap2.mirror = true;
        setRotation(cap2, 0F, 0F, 0F);
        rightbackfoot = new RendererModel(this, 0, 24);
        rightbackfoot.addBox(-3F, 10F, -3F, 6, 2, 6);
        rightbackfoot.setRotationPoint(-13F, 12F, 13F);
        rightbackfoot.setTextureSize(64, 32);
        rightbackfoot.mirror = true;
        setRotation(rightbackfoot, 0F, 0F, 0F);
        rightbackleg = new RendererModel(this, 0, 16);
        rightbackleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        rightbackleg.setRotationPoint(-13F, 12F, 13F);
        rightbackleg.setTextureSize(64, 32);
        rightbackleg.mirror = true;
        setRotation(rightbackleg, 0F, 0F, 0F);
        ext3 = new RendererModel(this, 24, 0);
        ext3.addBox(-2F, -2F, -2F, 4, 2, 8);
        ext3.setRotationPoint(-9F, 12F, 9F);
        ext3.setTextureSize(64, 32);
        ext3.mirror = true;
        setRotation(ext3, 0F, -0.7853982F, 0F);
        eye3 = new RendererModel(this, 48, 0);
        eye3.addBox(0F, 0F, 0F, 4, 4, 4);
        eye3.setRotationPoint(-15F, 8F, 11F);
        eye3.setTextureSize(64, 32);
        eye3.mirror = true;
        setRotation(eye3, 0F, 0F, 0F);
        cap3 = new RendererModel(this, 48, 0);
        cap3.addBox(0F, 0F, 0F, 4, 4, 4);
        cap3.setRotationPoint(-10F, 8F, 6F);
        cap3.setTextureSize(64, 32);
        cap3.mirror = true;
        setRotation(cap3, 0F, 0F, 0F);
        ext4 = new RendererModel(this, 24, 0);
        ext4.addBox(-2F, -2F, -2F, 4, 2, 8);
        ext4.setRotationPoint(-12F, 12F, -12F);
        ext4.setTextureSize(64, 32);
        ext4.mirror = true;
        setRotation(ext4, 0F, 0.7853982F, 0F);
        cap4 = new RendererModel(this, 48, 0);
        cap4.addBox(0F, 0F, 0F, 4, 4, 4);
        cap4.setRotationPoint(-10F, 8F, -10F);
        cap4.setTextureSize(64, 32);
        cap4.mirror = true;
        setRotation(cap4, 0F, 0F, 0F);
        eye4 = new RendererModel(this, 48, 0);
        eye4.addBox(0F, 0F, 0F, 4, 4, 4);
        eye4.setRotationPoint(-15F, 8F, -15F);
        eye4.setTextureSize(64, 32);
        eye4.mirror = true;
        setRotation(eye4, 0F, 0F, 0F);
        rightfrontleg = new RendererModel(this, 0, 16);
        rightfrontleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        rightfrontleg.setRotationPoint(-13F, 12F, -13F);
        rightfrontleg.setTextureSize(64, 32);
        rightfrontleg.mirror = true;
        setRotation(rightfrontleg, 0F, 0F, 0F);
        rightfrontfoot = new RendererModel(this, 0, 24);
        rightfrontfoot.addBox(-3F, 10F, -3F, 6, 2, 6);
        rightfrontfoot.setRotationPoint(-13F, 12F, -13F);
        rightfrontfoot.setTextureSize(64, 32);
        rightfrontfoot.mirror = true;
        setRotation(rightfrontfoot, 0F, 0F, 0F);
        head = new RendererModel(this, 0, 0);
        head.addBox(-4F, -9F, -4F, 8, 8, 8);
        head.setRotationPoint(0F, 1F, 0F);
        head.setTextureSize(64, 32);
        head.mirror = true;
        setRotation(head, 0F, 0F, 0F);
        ear2 = new RendererModel(this, 0, 22);
        ear2.addBox(4F, -7F, 5F, 1, 2, 7);
        ear2.setRotationPoint(0F, 1F, 0F);
        ear2.setTextureSize(64, 32);
        ear2.mirror = true;
        setRotation(ear2, 1.047198F, 0F, 0F);
        ear3 = new RendererModel(this, 0, 22);
        ear3.addBox(-5F, -4F, 6F, 1, 2, 7);
        ear3.setRotationPoint(0F, 1F, 0F);
        ear3.setTextureSize(64, 32);
        ear3.mirror = true;
        setRotation(ear3, 1.047198F, 0F, 0F);
        ear4 = new RendererModel(this, 0, 22);
        ear4.addBox(-5F, -7F, 5F, 1, 2, 7);
        ear4.setRotationPoint(0F, 1F, 0F);
        ear4.setTextureSize(64, 32);
        ear4.mirror = true;
        setRotation(ear4, 1.047198F, 0F, 0F);
    }

    @Override
    public void setRotationAngles(Eye entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor) {
        float headYaw = netHeadYaw / (180F / (float) Math.PI);
        float headPitchAngle = headPitch / (180F / (float) Math.PI);

        float rightAngle = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;
        float leftAngle = MathHelper.cos((float) (limbSwing * 0.6662F + Math.PI)) * 1.4F * limbSwingAmount;


        this.head.rotateAngleY = headYaw;
        this.head.rotateAngleX = headPitchAngle;
        this.ear1.rotateAngleY = headYaw;
        this.ear1.rotateAngleX = headPitchAngle;
        this.ear2.rotateAngleY = headYaw;
        this.ear2.rotateAngleX = headPitchAngle;
        this.ear3.rotateAngleY = headYaw;
        this.ear3.rotateAngleX = headPitchAngle;
        this.ear4.rotateAngleY = headYaw;
        this.ear4.rotateAngleX = headPitchAngle;

        this.rightfrontleg.rotateAngleX = rightAngle;
        this.rightbackleg.rotateAngleX = rightAngle;
        this.rightfrontfoot.rotateAngleX = rightAngle;
        this.rightbackfoot.rotateAngleX = rightAngle;

        this.leftfrontleg.rotateAngleX = leftAngle;
        this.leftbackleg.rotateAngleX = leftAngle;
        this.leftfrontfoot.rotateAngleX = leftAngle;
        this.leftbackfoot.rotateAngleX = leftAngle;

        this.rightfrontleg.rotateAngleY = 0.0F;
        this.rightbackleg.rotateAngleY = 0.0F;
        this.rightfrontfoot.rotateAngleY = 0.0F;
        this.rightbackfoot.rotateAngleY = 0.0F;

        this.leftfrontleg.rotateAngleY = 0.0F;
        this.leftbackleg.rotateAngleY = 0.0F;
        this.leftfrontfoot.rotateAngleY = 0.0F;
        this.leftbackfoot.rotateAngleY = 0.0F;
    }
}
